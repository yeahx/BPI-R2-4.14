# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
    - '*-main'
    - '*-ci'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install depencies
        run: |
          sudo apt update
          sudo apt install ccache libssl-dev u-boot-tools python-mako debhelper fakeroot gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu make device-tree-compiler libncurses5-dev

      - name: Setup env
        run: |
          echo "DT=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_ENV
          echo "KERNELVER=$(make kernelversion)" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Print env
        run: |
          echo $BRANCH $KERNELVER $DT
          
      - name: Setup cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache
          restore-keys: |
            ${{ runner.os }}-ccache
            ${{ runner.os }}-ccache-

      - name: Build for bananapi-r64
        run: | 
          sed -i 's/#\(board=bpi-r64\)/\1/' build.conf #change board to r64
          bash build.sh importconfig
          bash build.sh build
          bash build.sh cryptodev
      - name: Pack for bananapi-r64
        run: |
          bash build.sh pack_debs
          bash build.sh pack

      - name: Upload binaries to release
        if: endsWith(github.ref,'-main') 
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "CI-BUILD-${{ env.BRANCH }}-${{ env.KERNELVER }}-${{ env.DT }}"
          prerelease: false
          title: "Build for branch ${{ env.BRANCH }} (${{ env.KERNELVER }})"
          files: |
            ../SD/*
            ../*.deb
            *.itb
